{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPO,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SACpCD,EAAKD,iBAAiB,UAAU,SAACG,GAC/BA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASL,EAAKM,SAASf,MAAMgB,OAC1CC,EAAYH,SAASL,EAAKM,SAASG,KAAKF,OACxCG,EAASL,SAASL,EAAKM,SAASI,OAAOH,OAEpCI,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BtB,EAAcsB,EADOP,EAAaO,EAAIH,GAEnCI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAqCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const firstDelay = parseInt(form.elements.delay.value);\n    const delayStep = parseInt(form.elements.step.value);\n    const amount = parseInt(form.elements.amount.value);\n\n    for (let i = 0; i < amount; i++) {\n      const currentDelay = firstDelay + i * delayStep;\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n});\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","addEventListener","form","querySelector","event","preventDefault","firstDelay","parseInt","elements","value","delayStep","step","amount","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.ff501225.js.map"}